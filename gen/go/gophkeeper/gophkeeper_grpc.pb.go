// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: gophkeeper/gophkeeper.proto

package gophkeeperv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GophKeeperClient is the client API for GophKeeper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GophKeeperClient interface {
	SignIn(ctx context.Context, in *SingInRequest, opts ...grpc.CallOption) (*SignInResponse, error)
	SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error)
	SaveAuth(ctx context.Context, in *SaveAuthRequest, opts ...grpc.CallOption) (*SaveAuthResponse, error)
	SaveCard(ctx context.Context, in *SaveCardRequest, opts ...grpc.CallOption) (*SaveCardResponse, error)
	SaveText(ctx context.Context, in *SaveTextRequest, opts ...grpc.CallOption) (*SaveTextResponse, error)
	SaveBin(ctx context.Context, in *SaveBinRequest, opts ...grpc.CallOption) (*SaveBinResponse, error)
	GetAllAuth(ctx context.Context, in *GetAllAuthRequest, opts ...grpc.CallOption) (*GetAllAuthResponse, error)
	GetAllCards(ctx context.Context, in *GetAllCardsRequest, opts ...grpc.CallOption) (*GetAllCardsResponse, error)
	GetAllText(ctx context.Context, in *GetAllTextRequest, opts ...grpc.CallOption) (*GetAllTextResponse, error)
	GetAllBin(ctx context.Context, in *GetAllBinRequest, opts ...grpc.CallOption) (*GetAllBinResponse, error)
	GetAuthByName(ctx context.Context, in *GetAuthByNameRequest, opts ...grpc.CallOption) (*GetAuthByNameResponse, error)
	GetCardByName(ctx context.Context, in *GetCardByNameRequest, opts ...grpc.CallOption) (*GetCardByNameResponse, error)
	GetTextByName(ctx context.Context, in *GetTextByNameRequest, opts ...grpc.CallOption) (*GetTextByNameResponse, error)
	GetBinByName(ctx context.Context, in *GetBinByNameRequest, opts ...grpc.CallOption) (*GetBinByNameResponse, error)
	DeleteAuthByName(ctx context.Context, in *DeleteAuthByNameRequest, opts ...grpc.CallOption) (*DeleteAuthByNameResponse, error)
	DeleteCardByName(ctx context.Context, in *DeleteCardByNameRequest, opts ...grpc.CallOption) (*DeleteCardByNameResponse, error)
	DeleteTextByName(ctx context.Context, in *DeleteTextByNameRequest, opts ...grpc.CallOption) (*DeleteTextByNameResponse, error)
	DeleteBinByName(ctx context.Context, in *DeleteBinByNameRequest, opts ...grpc.CallOption) (*DeleteBinByNameResponse, error)
	SyncDB(ctx context.Context, in *SyncDBRequest, opts ...grpc.CallOption) (*SyncDBResponse, error)
}

type gophKeeperClient struct {
	cc grpc.ClientConnInterface
}

func NewGophKeeperClient(cc grpc.ClientConnInterface) GophKeeperClient {
	return &gophKeeperClient{cc}
}

func (c *gophKeeperClient) SignIn(ctx context.Context, in *SingInRequest, opts ...grpc.CallOption) (*SignInResponse, error) {
	out := new(SignInResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error) {
	out := new(SignUpResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/SignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) SaveAuth(ctx context.Context, in *SaveAuthRequest, opts ...grpc.CallOption) (*SaveAuthResponse, error) {
	out := new(SaveAuthResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/SaveAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) SaveCard(ctx context.Context, in *SaveCardRequest, opts ...grpc.CallOption) (*SaveCardResponse, error) {
	out := new(SaveCardResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/SaveCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) SaveText(ctx context.Context, in *SaveTextRequest, opts ...grpc.CallOption) (*SaveTextResponse, error) {
	out := new(SaveTextResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/SaveText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) SaveBin(ctx context.Context, in *SaveBinRequest, opts ...grpc.CallOption) (*SaveBinResponse, error) {
	out := new(SaveBinResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/SaveBin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) GetAllAuth(ctx context.Context, in *GetAllAuthRequest, opts ...grpc.CallOption) (*GetAllAuthResponse, error) {
	out := new(GetAllAuthResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/GetAllAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) GetAllCards(ctx context.Context, in *GetAllCardsRequest, opts ...grpc.CallOption) (*GetAllCardsResponse, error) {
	out := new(GetAllCardsResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/GetAllCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) GetAllText(ctx context.Context, in *GetAllTextRequest, opts ...grpc.CallOption) (*GetAllTextResponse, error) {
	out := new(GetAllTextResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/GetAllText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) GetAllBin(ctx context.Context, in *GetAllBinRequest, opts ...grpc.CallOption) (*GetAllBinResponse, error) {
	out := new(GetAllBinResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/GetAllBin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) GetAuthByName(ctx context.Context, in *GetAuthByNameRequest, opts ...grpc.CallOption) (*GetAuthByNameResponse, error) {
	out := new(GetAuthByNameResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/GetAuthByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) GetCardByName(ctx context.Context, in *GetCardByNameRequest, opts ...grpc.CallOption) (*GetCardByNameResponse, error) {
	out := new(GetCardByNameResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/GetCardByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) GetTextByName(ctx context.Context, in *GetTextByNameRequest, opts ...grpc.CallOption) (*GetTextByNameResponse, error) {
	out := new(GetTextByNameResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/GetTextByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) GetBinByName(ctx context.Context, in *GetBinByNameRequest, opts ...grpc.CallOption) (*GetBinByNameResponse, error) {
	out := new(GetBinByNameResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/GetBinByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) DeleteAuthByName(ctx context.Context, in *DeleteAuthByNameRequest, opts ...grpc.CallOption) (*DeleteAuthByNameResponse, error) {
	out := new(DeleteAuthByNameResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/DeleteAuthByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) DeleteCardByName(ctx context.Context, in *DeleteCardByNameRequest, opts ...grpc.CallOption) (*DeleteCardByNameResponse, error) {
	out := new(DeleteCardByNameResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/DeleteCardByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) DeleteTextByName(ctx context.Context, in *DeleteTextByNameRequest, opts ...grpc.CallOption) (*DeleteTextByNameResponse, error) {
	out := new(DeleteTextByNameResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/DeleteTextByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) DeleteBinByName(ctx context.Context, in *DeleteBinByNameRequest, opts ...grpc.CallOption) (*DeleteBinByNameResponse, error) {
	out := new(DeleteBinByNameResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/DeleteBinByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) SyncDB(ctx context.Context, in *SyncDBRequest, opts ...grpc.CallOption) (*SyncDBResponse, error) {
	out := new(SyncDBResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.GophKeeper/SyncDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GophKeeperServer is the server API for GophKeeper service.
// All implementations must embed UnimplementedGophKeeperServer
// for forward compatibility
type GophKeeperServer interface {
	SignIn(context.Context, *SingInRequest) (*SignInResponse, error)
	SignUp(context.Context, *SignUpRequest) (*SignUpResponse, error)
	SaveAuth(context.Context, *SaveAuthRequest) (*SaveAuthResponse, error)
	SaveCard(context.Context, *SaveCardRequest) (*SaveCardResponse, error)
	SaveText(context.Context, *SaveTextRequest) (*SaveTextResponse, error)
	SaveBin(context.Context, *SaveBinRequest) (*SaveBinResponse, error)
	GetAllAuth(context.Context, *GetAllAuthRequest) (*GetAllAuthResponse, error)
	GetAllCards(context.Context, *GetAllCardsRequest) (*GetAllCardsResponse, error)
	GetAllText(context.Context, *GetAllTextRequest) (*GetAllTextResponse, error)
	GetAllBin(context.Context, *GetAllBinRequest) (*GetAllBinResponse, error)
	GetAuthByName(context.Context, *GetAuthByNameRequest) (*GetAuthByNameResponse, error)
	GetCardByName(context.Context, *GetCardByNameRequest) (*GetCardByNameResponse, error)
	GetTextByName(context.Context, *GetTextByNameRequest) (*GetTextByNameResponse, error)
	GetBinByName(context.Context, *GetBinByNameRequest) (*GetBinByNameResponse, error)
	DeleteAuthByName(context.Context, *DeleteAuthByNameRequest) (*DeleteAuthByNameResponse, error)
	DeleteCardByName(context.Context, *DeleteCardByNameRequest) (*DeleteCardByNameResponse, error)
	DeleteTextByName(context.Context, *DeleteTextByNameRequest) (*DeleteTextByNameResponse, error)
	DeleteBinByName(context.Context, *DeleteBinByNameRequest) (*DeleteBinByNameResponse, error)
	SyncDB(context.Context, *SyncDBRequest) (*SyncDBResponse, error)
	mustEmbedUnimplementedGophKeeperServer()
}

// UnimplementedGophKeeperServer must be embedded to have forward compatible implementations.
type UnimplementedGophKeeperServer struct {
}

func (UnimplementedGophKeeperServer) SignIn(context.Context, *SingInRequest) (*SignInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignIn not implemented")
}
func (UnimplementedGophKeeperServer) SignUp(context.Context, *SignUpRequest) (*SignUpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUp not implemented")
}
func (UnimplementedGophKeeperServer) SaveAuth(context.Context, *SaveAuthRequest) (*SaveAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveAuth not implemented")
}
func (UnimplementedGophKeeperServer) SaveCard(context.Context, *SaveCardRequest) (*SaveCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCard not implemented")
}
func (UnimplementedGophKeeperServer) SaveText(context.Context, *SaveTextRequest) (*SaveTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveText not implemented")
}
func (UnimplementedGophKeeperServer) SaveBin(context.Context, *SaveBinRequest) (*SaveBinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveBin not implemented")
}
func (UnimplementedGophKeeperServer) GetAllAuth(context.Context, *GetAllAuthRequest) (*GetAllAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllAuth not implemented")
}
func (UnimplementedGophKeeperServer) GetAllCards(context.Context, *GetAllCardsRequest) (*GetAllCardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCards not implemented")
}
func (UnimplementedGophKeeperServer) GetAllText(context.Context, *GetAllTextRequest) (*GetAllTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllText not implemented")
}
func (UnimplementedGophKeeperServer) GetAllBin(context.Context, *GetAllBinRequest) (*GetAllBinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllBin not implemented")
}
func (UnimplementedGophKeeperServer) GetAuthByName(context.Context, *GetAuthByNameRequest) (*GetAuthByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthByName not implemented")
}
func (UnimplementedGophKeeperServer) GetCardByName(context.Context, *GetCardByNameRequest) (*GetCardByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardByName not implemented")
}
func (UnimplementedGophKeeperServer) GetTextByName(context.Context, *GetTextByNameRequest) (*GetTextByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTextByName not implemented")
}
func (UnimplementedGophKeeperServer) GetBinByName(context.Context, *GetBinByNameRequest) (*GetBinByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBinByName not implemented")
}
func (UnimplementedGophKeeperServer) DeleteAuthByName(context.Context, *DeleteAuthByNameRequest) (*DeleteAuthByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAuthByName not implemented")
}
func (UnimplementedGophKeeperServer) DeleteCardByName(context.Context, *DeleteCardByNameRequest) (*DeleteCardByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCardByName not implemented")
}
func (UnimplementedGophKeeperServer) DeleteTextByName(context.Context, *DeleteTextByNameRequest) (*DeleteTextByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTextByName not implemented")
}
func (UnimplementedGophKeeperServer) DeleteBinByName(context.Context, *DeleteBinByNameRequest) (*DeleteBinByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBinByName not implemented")
}
func (UnimplementedGophKeeperServer) SyncDB(context.Context, *SyncDBRequest) (*SyncDBResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncDB not implemented")
}
func (UnimplementedGophKeeperServer) mustEmbedUnimplementedGophKeeperServer() {}

// UnsafeGophKeeperServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GophKeeperServer will
// result in compilation errors.
type UnsafeGophKeeperServer interface {
	mustEmbedUnimplementedGophKeeperServer()
}

func RegisterGophKeeperServer(s grpc.ServiceRegistrar, srv GophKeeperServer) {
	s.RegisterService(&GophKeeper_ServiceDesc, srv)
}

func _GophKeeper_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).SignIn(ctx, req.(*SingInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).SignUp(ctx, req.(*SignUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_SaveAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).SaveAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/SaveAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).SaveAuth(ctx, req.(*SaveAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_SaveCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).SaveCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/SaveCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).SaveCard(ctx, req.(*SaveCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_SaveText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).SaveText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/SaveText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).SaveText(ctx, req.(*SaveTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_SaveBin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveBinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).SaveBin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/SaveBin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).SaveBin(ctx, req.(*SaveBinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_GetAllAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).GetAllAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/GetAllAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).GetAllAuth(ctx, req.(*GetAllAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_GetAllCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).GetAllCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/GetAllCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).GetAllCards(ctx, req.(*GetAllCardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_GetAllText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).GetAllText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/GetAllText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).GetAllText(ctx, req.(*GetAllTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_GetAllBin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).GetAllBin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/GetAllBin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).GetAllBin(ctx, req.(*GetAllBinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_GetAuthByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).GetAuthByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/GetAuthByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).GetAuthByName(ctx, req.(*GetAuthByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_GetCardByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).GetCardByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/GetCardByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).GetCardByName(ctx, req.(*GetCardByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_GetTextByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTextByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).GetTextByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/GetTextByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).GetTextByName(ctx, req.(*GetTextByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_GetBinByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBinByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).GetBinByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/GetBinByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).GetBinByName(ctx, req.(*GetBinByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_DeleteAuthByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).DeleteAuthByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/DeleteAuthByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).DeleteAuthByName(ctx, req.(*DeleteAuthByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_DeleteCardByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCardByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).DeleteCardByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/DeleteCardByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).DeleteCardByName(ctx, req.(*DeleteCardByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_DeleteTextByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTextByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).DeleteTextByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/DeleteTextByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).DeleteTextByName(ctx, req.(*DeleteTextByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_DeleteBinByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBinByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).DeleteBinByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/DeleteBinByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).DeleteBinByName(ctx, req.(*DeleteBinByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_SyncDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).SyncDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.GophKeeper/SyncDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).SyncDB(ctx, req.(*SyncDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GophKeeper_ServiceDesc is the grpc.ServiceDesc for GophKeeper service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GophKeeper_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gophkeeper.GophKeeper",
	HandlerType: (*GophKeeperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignIn",
			Handler:    _GophKeeper_SignIn_Handler,
		},
		{
			MethodName: "SignUp",
			Handler:    _GophKeeper_SignUp_Handler,
		},
		{
			MethodName: "SaveAuth",
			Handler:    _GophKeeper_SaveAuth_Handler,
		},
		{
			MethodName: "SaveCard",
			Handler:    _GophKeeper_SaveCard_Handler,
		},
		{
			MethodName: "SaveText",
			Handler:    _GophKeeper_SaveText_Handler,
		},
		{
			MethodName: "SaveBin",
			Handler:    _GophKeeper_SaveBin_Handler,
		},
		{
			MethodName: "GetAllAuth",
			Handler:    _GophKeeper_GetAllAuth_Handler,
		},
		{
			MethodName: "GetAllCards",
			Handler:    _GophKeeper_GetAllCards_Handler,
		},
		{
			MethodName: "GetAllText",
			Handler:    _GophKeeper_GetAllText_Handler,
		},
		{
			MethodName: "GetAllBin",
			Handler:    _GophKeeper_GetAllBin_Handler,
		},
		{
			MethodName: "GetAuthByName",
			Handler:    _GophKeeper_GetAuthByName_Handler,
		},
		{
			MethodName: "GetCardByName",
			Handler:    _GophKeeper_GetCardByName_Handler,
		},
		{
			MethodName: "GetTextByName",
			Handler:    _GophKeeper_GetTextByName_Handler,
		},
		{
			MethodName: "GetBinByName",
			Handler:    _GophKeeper_GetBinByName_Handler,
		},
		{
			MethodName: "DeleteAuthByName",
			Handler:    _GophKeeper_DeleteAuthByName_Handler,
		},
		{
			MethodName: "DeleteCardByName",
			Handler:    _GophKeeper_DeleteCardByName_Handler,
		},
		{
			MethodName: "DeleteTextByName",
			Handler:    _GophKeeper_DeleteTextByName_Handler,
		},
		{
			MethodName: "DeleteBinByName",
			Handler:    _GophKeeper_DeleteBinByName_Handler,
		},
		{
			MethodName: "SyncDB",
			Handler:    _GophKeeper_SyncDB_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gophkeeper/gophkeeper.proto",
}
